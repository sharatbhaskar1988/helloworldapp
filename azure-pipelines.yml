trigger:
- master

stages:
- stage: "BuildStage"
  jobs:
  - job: "BuildJob"
    pool:
    #   name: myagent
    #   demands: 
    #   - agent.name -equals dotnet
      vmImage: ubuntu-latest

    steps:
    - task: DotNetCoreCLI@2
      inputs:
        command: 'restore'
        projects: '**/*.csproj'
        feedsToUse: 'select'

    - task: DotNetCoreCLI@2
      inputs:
        command: 'build'
        projects: '**/*.csproj'
        arguments: '--configuration $(buildConfiguration)'

    - task: DotNetCoreCLI@2
      inputs:
        command: 'publish'
        publishWebProjects: true
        arguments: '--configuration $(buildConfiguration) --output'
      
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Build.ArtifactStagingDirectory)'
        artifact: 'drop'
        publishLocation: 'pipeline'

- stage: "DeployToDev"
  dependsOn: "BuildStage"
  jobs:
  - job:
    pool:
     name: myagent
     demands:
     - agent.name -equals dotnet

    steps:
    - task: AzureRmWebAppDeployment@4
      inputs:
        ConnectionType: 'AzureRM'
        azureSubscription: 'DSS Training7 service connection'
        appType: 'webApp'
        WebAppName: 'hwa-dev'
        packageForLinux: '$(System.DefaultWorkingDirectory)/**/*.zip'

- stage: "DeployToQA"
  dependsOn: "DeployToDev"
  jobs:
  - job:
    pool:
     name: myagent
     demands:
     - agent.name -equals dotnet

    steps:
    - task: AzureRmWebAppDeployment@4
      inputs:
        ConnectionType: 'AzureRM'
        azureSubscription: 'DSS Training7 service connection'
        appType: 'webApp'
        WebAppName: 'hwa-qa'
        packageForLinux: '$(System.DefaultWorkingDirectory)/**/*.zip'
    
- stage: "DeployToProduction"
  dependsOn: "DeployToQA"
  jobs:
  - job:
    pool:
     name: myagent
     demands:
     - agent.name -equals dotnet

    steps:
    - task: AzureRmWebAppDeployment@4
      inputs:
        ConnectionType: 'AzureRM'
        azureSubscription: 'DSS Training7 service connection'
        appType: 'webApp'
        WebAppName: 'hwa-prod'
        deployToSlotOrASE: true
        ResourceGroupName: 'helloworldapp'
        SlotName: 'staging'
        packageForLinux: '$(System.DefaultWorkingDirectory)/**/*.zip'

    