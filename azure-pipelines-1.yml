trigger:
- "*"

pool:
 vmImage: ubuntu-latest

stages:
- stage: "BuildStage"
  jobs:
  - job: "BuildJob"
    steps:
    - task: DotNetCoreCLI@2
      displayName: "Dotnet Restore"
      inputs:
        command: 'restore'
        projects: '**/*.csproj'
        feedsToUse: 'select'
    - task: DotNetCoreCLI@2
      displayName: "Dotnet Build"
      inputs:
        command: 'build'
        projects: '**/*.csproj'
        arguments: '--configuration $(buildConfiguration)'
    - task: DotNetCoreCLI@2
      displayName: "Dotnet publish"
      inputs:
        command: 'publish'
        publishWebProjects: true
        arguments: '--output $(build.ArtifactStagingDirectory) --configuration $(buildConfiguration)'  
    - task: PublishPipelineArtifact@1
      inputs:
          targetPath: '$(Pipeline.Workspace)'
          artifact: 'drop'
          publishLocation: 'pipeline'

- stage: "DeploytoDev"
  dependsOn: "BuildStage"
  condition: eq(variables['Build.SourceBranch'], 'refs/heads/development')
  jobs:
  - deployment:
    pool:
      vmImage: ubuntu-latest
    environment: 'Development'
    strategy:
     runOnce:
       deploy:         
        steps:
        - task: AzureRmWebAppDeployment@4
          inputs:
            ConnectionType: 'AzureRM'
            azureSubscription: 'DSS'
            appType: 'webApp'
            WebAppName: 'hwa-dev'
            packageForLinux: '$(Pipeline.Workspace)/**/*.zip'

- stage: "DeploytoQA"
  jobs:
  - deployment:
    pool:
      vmImage: ubuntu-latest
    environment: 'QA'
    strategy:
      runOnce:
        deploy:         
          steps:
          - task: AzureRmWebAppDeployment@4
            inputs:
              ConnectionType: 'AzureRM'
              azureSubscription: 'DSS'
              appType: 'webApp'
              WebAppName: 'hwa-qa'
              packageForLinux: '$(Pipeline.Workspace)/**/*.zip'

- stage: "DeploytoProd"
  dependsOn: "BuildStage"
  condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')
  jobs:
  - deployment:
    pool:
      vmImage: ubuntu-latest
    environment: 'Production'
    strategy:
     runOnce:
       deploy:        
        steps:
        - task: AzureRmWebAppDeployment@4
          inputs:
            ConnectionType: 'AzureRM'
            azureSubscription: 'DSS'
            appType: 'webApp'
            WebAppName: 'hwa-prod'
            deployToSlotOrASE: true
            ResourceGroupName: 'helloworldapp'
            SlotName: 'staging'
            packageForLinux: '$(Pipeline.Workspace)/**/*.zip'
        - task: AzureAppServiceManage@0
          inputs:
            azureSubscription: 'DSS'
            Action: 'Swap Slots'
            WebAppName: 'hwa-prod'
            ResourceGroupName: 'helloworldapp'
            SourceSlot: 'staging'